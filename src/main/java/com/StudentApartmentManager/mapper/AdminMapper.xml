<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.StudentApartmentManager.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="com.StudentApartmentManager.model.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="admin_sex" jdbcType="INTEGER" property="adminSex" />
    <result column="admin_phone" jdbcType="VARCHAR" property="adminPhone" typeHandler="privacy.AesTypeHandler" />
    <result column="admin_password" jdbcType="VARCHAR" property="adminPassword" typeHandler="privacy.Md5TypeHandler" />
    <result column="admin_region" jdbcType="VARCHAR" property="adminRegion" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="delete_time" jdbcType="INTEGER" property="deleteTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPhoneCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler} and #{criterion.secondValue,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.AesTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPasswordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler} and #{criterion.secondValue,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.Md5TypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPhoneCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler} and #{criterion.secondValue,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.AesTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPasswordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler} and #{criterion.secondValue,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.Md5TypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin_name, admin_sex, admin_phone, admin_password, admin_region, create_time, 
    update_time, delete_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.StudentApartmentManager.model.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.StudentApartmentManager.model.AdminExample">
    delete from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.StudentApartmentManager.model.Admin">
    insert into t_admin (id, admin_name, admin_sex, 
      admin_phone, admin_password, 
      admin_region, create_time, update_time, 
      delete_time, remark)
    values (#{id,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminSex,jdbcType=INTEGER}, 
      #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler}, #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler}, 
      #{adminRegion,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{deleteTime,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.StudentApartmentManager.model.Admin">
    insert into t_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="adminSex != null">
        admin_sex,
      </if>
      <if test="adminPhone != null">
        admin_phone,
      </if>
      <if test="adminPassword != null">
        admin_password,
      </if>
      <if test="adminRegion != null">
        admin_region,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null">
        #{adminSex,jdbcType=INTEGER},
      </if>
      <if test="adminPhone != null">
        #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="adminPassword != null">
        #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="adminRegion != null">
        #{adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.StudentApartmentManager.model.AdminExample" resultType="java.lang.Long">
    select count(*) from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.adminSex != null">
        admin_sex = #{record.adminSex,jdbcType=INTEGER},
      </if>
      <if test="record.adminPhone != null">
        admin_phone = #{record.adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="record.adminPassword != null">
        admin_password = #{record.adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="record.adminRegion != null">
        admin_region = #{record.adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_admin
    set id = #{record.id,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      admin_sex = #{record.adminSex,jdbcType=INTEGER},
      admin_phone = #{record.adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      admin_password = #{record.adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      admin_region = #{record.adminRegion,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      delete_time = #{record.deleteTime,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.StudentApartmentManager.model.Admin">
    update t_admin
    <set>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null">
        admin_sex = #{adminSex,jdbcType=INTEGER},
      </if>
      <if test="adminPhone != null">
        admin_phone = #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="adminPassword != null">
        admin_password = #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="adminRegion != null">
        admin_region = #{adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.StudentApartmentManager.model.Admin">
    update t_admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_sex = #{adminSex,jdbcType=INTEGER},
      admin_phone = #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      admin_password = #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      admin_region = #{adminRegion,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.StudentApartmentManager.model.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="admin_sex" jdbcType="INTEGER" property="adminSex" />
    <result column="admin_phone" jdbcType="VARCHAR" property="adminPhone" typeHandler="privacy.AesTypeHandler" />
    <result column="admin_password" jdbcType="VARCHAR" property="adminPassword" typeHandler="privacy.Md5TypeHandler" />
    <result column="admin_region" jdbcType="VARCHAR" property="adminRegion" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="delete_time" jdbcType="INTEGER" property="deleteTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPhoneCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler} and #{criterion.secondValue,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.AesTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPasswordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler} and #{criterion.secondValue,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.Md5TypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPhoneCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.AesTypeHandler} and #{criterion.secondValue,typeHandler=privacy.AesTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.AesTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.adminPasswordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=privacy.Md5TypeHandler} and #{criterion.secondValue,typeHandler=privacy.Md5TypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=privacy.Md5TypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin_name, admin_sex, admin_phone, admin_password, admin_region, create_time, 
    update_time, delete_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.StudentApartmentManager.model.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.StudentApartmentManager.model.AdminExample">
    delete from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.StudentApartmentManager.model.Admin">
    insert into t_admin (id, admin_name, admin_sex, 
      admin_phone, admin_password, 
      admin_region, create_time, update_time, 
      delete_time, remark)
    values (#{id,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminSex,jdbcType=INTEGER}, 
      #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler}, #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler}, 
      #{adminRegion,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{deleteTime,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.StudentApartmentManager.model.Admin">
    insert into t_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="adminSex != null">
        admin_sex,
      </if>
      <if test="adminPhone != null">
        admin_phone,
      </if>
      <if test="adminPassword != null">
        admin_password,
      </if>
      <if test="adminRegion != null">
        admin_region,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null">
        #{adminSex,jdbcType=INTEGER},
      </if>
      <if test="adminPhone != null">
        #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="adminPassword != null">
        #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="adminRegion != null">
        #{adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.StudentApartmentManager.model.AdminExample" resultType="java.lang.Long">
    select count(*) from t_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.adminSex != null">
        admin_sex = #{record.adminSex,jdbcType=INTEGER},
      </if>
      <if test="record.adminPhone != null">
        admin_phone = #{record.adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="record.adminPassword != null">
        admin_password = #{record.adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="record.adminRegion != null">
        admin_region = #{record.adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_admin
    set id = #{record.id,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      admin_sex = #{record.adminSex,jdbcType=INTEGER},
      admin_phone = #{record.adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      admin_password = #{record.adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      admin_region = #{record.adminRegion,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      delete_time = #{record.deleteTime,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.StudentApartmentManager.model.Admin">
    update t_admin
    <set>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null">
        admin_sex = #{adminSex,jdbcType=INTEGER},
      </if>
      <if test="adminPhone != null">
        admin_phone = #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      </if>
      <if test="adminPassword != null">
        admin_password = #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      </if>
      <if test="adminRegion != null">
        admin_region = #{adminRegion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.StudentApartmentManager.model.Admin">
    update t_admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_sex = #{adminSex,jdbcType=INTEGER},
      admin_phone = #{adminPhone,jdbcType=VARCHAR,typeHandler=privacy.AesTypeHandler},
      admin_password = #{adminPassword,jdbcType=VARCHAR,typeHandler=privacy.Md5TypeHandler},
      admin_region = #{adminRegion,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>