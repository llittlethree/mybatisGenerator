<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--加载资源文件 修改成自己配置文件-->
    <properties resource="application.properties"></properties>
    <context id="testTables" targetRuntime="MyBatis3">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖-->
        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，
        比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <commentGenerator>
            <!--是否去除自动生成的注释 true是：false 否-->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库连接 修改成自己的数据库配置，此处直接调用了配置文件中spring boot对数据库的连接配置-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}"></jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--targetPackage目标包，targetPackage修改成自己要放生成实体类的位置 -->
        <javaModelGenerator targetPackage="com.StudentApartmentManager.model" targetProject="src/main/java">
            <!--enableSubPackages,是否让schema作为包的后缀-->
            <property name="enableSubPackages" value="false"/>
            <!--从数据库返回的值被清除前后空格 对String类型字段调用trim()方法-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--targetProject:mapper映射文件生成的位置  targetPackage修改成自己要放Mapper的路径-->
        <sqlMapGenerator targetPackage="com.StudentApartmentManager.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"></property>

        </sqlMapGenerator>
        <!--targetPackage:mapper接口生成的位置 targetPackage修改成自己要放Mapper接口的路径 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.StudentApartmentManager.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!--tableName指定数据库表，要和数据库中进行对应，否则将会出错 domainObjectName:生成实体的文件名 enableXXXExample:是否生成Example-->
        <table tableName="t_student"  domainObjectName="Student"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true" >
            <!--配置加密解密字段-->
            <columnOverride column="student_password" javaType="String" typeHandler="privacy.Md5TypeHandler"></columnOverride>
        </table>
        <table tableName="t_admin"  domainObjectName="Admin"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
            <columnOverride column="admin_phone" javaType="String" typeHandler="privacy.AesTypeHandler"></columnOverride>
            <columnOverride column="admin_password" javaType="String" typeHandler="privacy.Md5TypeHandler"></columnOverride>
        </table>

        <table tableName="t_region"  domainObjectName="Region"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true"></table>
        <table tableName="t_building"  domainObjectName="Building"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true"></table>
        <table tableName="t_dormitory"  domainObjectName="Dormitory"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true"></table>
        <table tableName="t_notice"  domainObjectName="Notice"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true"></table>
        <table tableName="t_notice_type"  domainObjectName="NoticeType"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true"></table>
    </context>
</generatorConfiguration>